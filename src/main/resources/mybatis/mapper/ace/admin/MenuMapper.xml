<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
    @apiNote 메뉴 관련 매퍼
    @author  seunggu
 -->
<mapper namespace="com.inno.ace.model.dao.ace.admin.MenuDao">

    <resultMap id="authMenuMap" type="menuVO">
        <result property="menuId" column="menuId"/>
        <result property="menuNm" column="menuNm"/>
        <collection property="authList" column="menuId" resultMap="authMap"/>
    </resultMap>

    <resultMap id="authMap" type="menuAuthVO">
        <result property="menuId" column="mMenuId"/>
        <result property="menuAuthId" column="menuAuthId"/>
        <result property="authType" column="authType"/>
        <result property="authGroupId" column="authGroupId"/>
        <result property="authGroupNm" column="authGroupNm"/>
    </resultMap>

    <!-- select id="selectAuthMenuList" resultMap="authMenuMap">
        SELECT
            m.menu_id AS menuId,
            m.menu_nm AS menuNm,
            auth_group_id AS authGroupId,
            auth_group_nm AS authGroupNm,
            ma.menu_id AS mMenuId,
            menu_auth_id AS menuAuthId,
            ifnull(auth_type,'N') AS authType

        FROM tb_menu m
        cross JOIN (
            SELECT
                auth_group_id,
                auth_group_nm,
                menu_id,
                auth_type,
                menu_auth_id
            FROM tb_auth_group
            LEFT JOIN tb_menu_auth
            USING(auth_group_id)
            WHERE
                use_yn = 'Y'
        ) ma
        WHERE
            m.menu_id = #{menuId}
    </select -->

    <select id="selectAuthMenuList" resultType="menuAuthVO">
        SELECT
            auth_group_id as authGroupId,
            auth_group_nm as authGroupNm,
            menu_auth_id as menuAuthId,
            menu_id as menuId,
            ifnull(auth_type, 'N') AS authType
        FROM tb_auth_group tg
        LEFT JOIN (
            select
                   auth_group_id,
                   menu_auth_id,
                   menu_id,
                   auth_type
            from tb_menu_auth
            WHERE
                  menu_id = #{menuId}
            ) ma
       USING(auth_group_id)
    </select>
    <!--메뉴 전체 리스트 조회 -->
    <select id="selectMenuList" resultType="menuVO">
        select
            menu_id         as menuId,
            par_menu_id     as parMenuId,
            menu_nm         as menuNm,
            menu_nm         as name,
            ord             as ord,
            menu_yn         as menuYn,
            use_yn          as useYn,
            menu_level      as menuLevel,
            page_url        as pageUrl,
            component,
            meta_info       as metaInfo,
            crt_dtm         as crtDtm,
            crt_id          as crtId,
            chg_dtm         as chgDtm,
            chg_id          as chgId
        from tb_menu
        where
            use_yn = 'Y'
        ORDER BY par_menu_id, ORD asc
    </select>

    <!-- 메뉴 단건 조회 -->
    <select id="selectMenu" resultType="menuVO">
        select
            menu_id         as menuId,
            par_menu_id     as parMenuId,
            menu_nm         as menuNm,
            ord             as ord,
            use_yn          as useYn,
            menu_yn         as menuYn,
            menu_level      as menuLevel,
            page_url        as pageUrl,
            component,
            meta_info       as metaInfo,
            crt_dtm         as crtDtm,
            crt_id          as crtId,
            chg_dtm         as chgDtm,
            chg_id          as chgId
        from tb_menu
        where
            menu_id = #{menuId}
    </select>

    <!-- 부모가 같은 메뉴 전체 조회 -->
    <select id="selectMenuListByParMenuId" resultType="menuVO">
        select
            menu_id         as menuId,
            par_menu_id     as parMenuId,
            menu_nm         as menuNm,
            ord             as ord,
            use_yn          as useYn,
            menu_yn         as menuYn,
            menu_level      as menuLevel,
            page_url        as pageUrl,
            component,
            meta_info       as metaInfo,
            crt_dtm         as crtDtm,
            chg_dtm         as chgDtm
        from tb_menu
        where
            par_menu_id = #{parMenuId}
            and menu_id <![CDATA[<>]]> 0
        order by ord
    </select>

    <!-- 순번과 메뉴아이디 채번 -->
    <select id="selectOrdAndMenuId" resultType="menuVO">
        SELECT
            ifnull(MAX(ORD),0)+1 AS ORD,
            case par_menu_id
                when 0 then
                    IFNULL(MAX(menu_id), 0) +1
                else
                    IFNULL(MAX(menu_id), #{parMenuId} * 1000) + 1
            END  AS menuId
        FROM tb_menu
        WHERE par_menu_id = #{parMenuId}
    </select>

    <!-- 메뉴 등록 -->
    <insert id="insertMenu" parameterType="menuVO">
        insert into
            tb_menu(
                menu_id,
                par_menu_id,
                menu_nm,
                ord,
                use_yn,
                menu_yn,
                menu_level,
                page_url,
                component,
                meta_info,
                crt_dtm
            )values (
                #{menuId},
                #{parMenuId},
                #{menuNm},
                #{ord},
                #{useYn},
                #{menuYn},
                #{menuLevel},
                #{pageUrl},
                #{component},
                #{metaInfo},
                now()
            )
            on duplicate key
            update
                par_menu_id = #{parMenuId},
                menu_nm = #{menuNm},
                ord = #{ord},
                use_yn = #{useYn},
                menu_yn = #{menuYn},
                menu_level = #{menuLevel},
                page_url = #{pageUrl},
                component = #{component},
                meta_info = #{metaInfo},
                chg_dtm = now()
    </insert>

    <update id="updateOrd">
        update tb_menu
            set
                ord = #{ord}
            where
                menu_id = #{menuId}
    </update>

    <!-- 하위 메뉴 전체 삭제 -->
    <delete id="deleteChildMenu">
        delete from tb_menu
        where
            par_menu_id = #{menuId}
    </delete>

    <!-- 메뉴 삭제 -->
    <delete id="deleteMenu">
        delete from tb_menu
        where
            menu_id = #{menuId}
    </delete>

</mapper>